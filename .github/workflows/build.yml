name: CANdevStudio

on: [push]

jobs:
  Linux-Release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install Deps
    - uses: jurplel/install-qt-action@v2
    - uses: MarkusJx/install-boost@v1.0.1
      id: install-boost
      with:
        boost_version: 1.73.0

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release -DCI_TESTS=ON
      env:
        BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: make -j3

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: ctest
      env:
        QT_QPA_PLATFORM: offscreen

  Linux-Debug:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install Qt
      uses: jurplel/install-qt-action@v2

    - name: Install boost
      uses: MarkusJx/install-boost@v1.0.1
      id: install-boost
      with:
        boost_version: 1.73.0

    - name: Install lcov
      run: sudo apt install -y lcov

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Debug -DCI_TESTS=ON -DWITH_COVERAGE=ON
      env:
        BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: make -j3

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: ctest
      env:
        QT_QPA_PLATFORM: offscreen

    - name: Code Coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        #files: ./coverage1.xml,./coverage2.xml # optional
        #flags: unittests # optional
        #name: codecov-umbrella # optional
        #fail_ci_if_error: true # optional (default = false)
        #verbose: true # optional (default = false)

  macOS-Release:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install cmake and boost
      run: brew install cmake boost

    - name: Install Qt
      uses: jurplel/install-qt-action@v2

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release -DWITH_TESTS=OFF
      env:
        BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: make -j4

  Windows-Release:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install Qt
      uses: jurplel/install-qt-action@v2

    - name: Install boost
      uses: MarkusJx/install-boost@v1.0.1
      id: install-boost
      with:
        boost_version: 1.73.0

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release -G "Visual Studio 16 2019" -A x64
      env:
        BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config Release
